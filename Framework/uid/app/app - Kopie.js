"use strict";angular.module("duerrDiagnoseApp",["ngCookies","ngResource","ngSanitize","ui.router","restangular","angularUtils.directives.dirPagination","angularMoment"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(a,b,c){b.otherwise("/"),c.html5Mode(!1)}]);var appConfig={useDummyData:!0,serverUrl:"http://85.25.47.189:9000"};!function(){function a(a,b){}a.$inject=["$scope","$http"],angular.module("duerrDiagnoseApp").controller("MainController",a)}(),angular.module("duerrDiagnoseApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"})}]),angular.module("duerrDiagnoseApp").controller("PlantCtrl",["$scope",function(a){a.message="Hello"}]),angular.module("duerrDiagnoseApp").config(["$stateProvider",function(a){a.state("plant",{url:"/plant/:id-:name",templateUrl:"app/plant/plant.html",controller:"PlantCtrl"})}]),angular.module("duerrDiagnoseApp").controller("ContentsectionCtrl",["$scope","$timeout","dataFactory",function(a,b,c){var d,e=this;a.plants,this.getPlants=function(){c.getPlants().then(function(b){b&&(a.plants=b)}),d=b(e.getPlants,1e3)},a.$on("$destroy",function(){b.cancel(d)}),this.init=function(){e.getPlants()},e.init()}]),angular.module("duerrDiagnoseApp").directive("contentsection",function(){return{templateUrl:"directives/contentsection/contentsection.html",restrict:"EA",controller:"ContentsectionCtrl",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").controller("ContentsectionPlantCtrl",["$scope","$timeout","dataFactory","$stateParams",function(a,b,c,d){function e(a){var b=0;return a.errorCount>0&&(b="error"),0==a.errorCount&&a.warningCount>0&&(b="warning"),0==a.errorCount&&a.warningCount>0&&a.infoCount>0&&(b="info"),b}var f,g,h=this;a.selectedTile,a.wizardData,a.items=[],a.filter={error:!0,warning:!0,info:!0},a.overviewStatus=e(a.messages),a.number=5,a.getNumber=function(a){return new Array(a)},a.selectTile=function(b){a.selectedTile=b,h.getWizardData(b.id)},this.getErrors=function(){return c.getErrorsByPlant(d.id).then(function(c){c&&(c.sort(function(a,b){return a.productionRelevance-b.productionRelevance}),a.items=c),f=b(h.getErrors,1e3)})},this.getWizardData=function(b){c.getMainCausesFromErrors(b).then(function(b){b&&(a.wizardData=b)})},this.getPlantById=function(){c.getPlantById(d.id).then(function(b){b&&(a.plant=b,a.plant.status=e(a.plant))}),g=b(h.getPlantById,1e3)},a.$on("$destroy",function(){b.cancel(f),b.cancel(g)}),a.resetFilter=function(){a.filter.error=!0,a.filter.warning=!0,a.filter.info=!0},this.init=function(){h.getErrors().then(function(){a.items.length>0&&a.items[0]&&a.selectTile(a.items[0])}),h.getPlantById()},h.init()}]),angular.module("duerrDiagnoseApp").directive("contentsectionPlant",function(){return{templateUrl:"directives/contentsectionPlant/contentsectionPlant.html",restrict:"EA",controller:"ContentsectionPlantCtrl",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").directive("gridelement",function(){return{templateUrl:"directives/gridelement/gridelement.html",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").directive("gridelementPlant",function(){return{templateUrl:"directives/gridelementPlant/gridelementPlant.html",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").directive("mainmenu",function(){return{templateUrl:"directives/mainmenu/mainmenu.html",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").directive("navigationBar",function(){return{templateUrl:"directives/navigationBar/navigationBar.html",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").controller("StatusbarCtrl",["$scope","$timeout","dataFactory",function(a,b,c){var d,e,f=this;a.messages;var g=function(){a.clock=Date.now(),e=b(g,6e4)},h=function(){c.getMessages().then(function(b){b&&(a.messages=b)}),d=b(h,1e3)};a.$on("$destroy",function(){b.cancel(d),b.cancel(e)}),this.init=function(){g(),h()},f.init()}]),angular.module("duerrDiagnoseApp").directive("statusbar",function(){return{templateUrl:"directives/statusbar/statusbar.html",restrict:"EA",controller:"StatusbarCtrl",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").controller("WizardCtrl",["$scope","dataFactory","$q",function(a,b,c){var d=this;a.showOverview=!1;var e=document.getElementsByClassName("overlay"),f=document.getElementsByClassName("related-container"),g=document.getElementsByClassName("solutions-container");a.relatedErrors=[],a.areInfoButtonsDisabled=!1,a.toggleHandling=function(a){b.toggleFunctionGroupHandling(a)},a.closeSolutionOverlay=function(){e[0].classList.remove("open"),g[0].classList.remove("open"),a.openSolution=!1;var b=Array.prototype.forEach,c="active";b.call(document.querySelectorAll("."+c),function(a){a.classList.remove(c)})},a.openSolutions=function(b){g[0].classList.contains("open")&&a.closeSolutionOverlay(),g[0].classList.add("open"),e[0].classList.add("open"),a.openSolution=b},a.isSelected=function(b){return a.openSolution===b},this.getRelatedErrors=function(){var d=c.defer();return a.relatedErrors=[],a.selectedTile.relatesTo.forEach(function(c){b.getErrorById(c).then(function(b){b&&(a.relatedErrors.push(b),a.relatedErrors.length==a.selectedTile.relatesTo.length&&d.resolve())})}),d.promise},this.getRelatedMainCauses=function(){var d=c.defer();return a.relatedMainCauses=[],a.selectedTile.relatesTo.forEach(function(c){b.getMainCausesFromErrors(c).then(function(b){b&&(a.relatedMainCauses.push(b),a.relatedMainCauses.length==a.selectedTile.relatesTo.length&&d.resolve(c))})}),d.promise},a.closeRelatedOverlay=function(){e[0].classList.remove("open"),f[0].classList.remove("open"),a.areInfoButtonsDisabled=!1},a.openRelatedGroups=function(b){f[0].classList.contains("open")?a.closeRelatedOverlay():d.getRelatedErrors().then(d.getRelatedMainCauses).then(function(){a.closeSolutionOverlay(),a.areInfoButtonsDisabled=!0,a.functionGroupId=b,e[0].classList.add("open"),f[0].classList.add("open"),a.showOverview=!0})},a.closeAllOverlays=function(){g[0].classList.contains("open")&&a.closeSolutionOverlay(),f[0].classList.contains("open")&&a.closeRelatedOverlay()}}]),angular.module("duerrDiagnoseApp").directive("wizard",function(){return{templateUrl:"directives/wizard/wizard.html",restrict:"EA",controller:"WizardCtrl",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").controller("WizardRelatedCtrl",["$scope",function(a){a.relatedErrors,a.loadRelatedErrors=function(){a.selectedTile.relatesTo.forEach(function(a){console.log(a.name)})}}]),angular.module("duerrDiagnoseApp").directive("wizardRelated",function(){return{templateUrl:"directives/wizardRelated/wizardRelated.html",controller:"WizardCtrl",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").controller("WizardSolutionsCtrl",["$scope",function(a){a.message="Hello"}]),angular.module("duerrDiagnoseApp").directive("wizardSolutions",function(){return{templateUrl:"directives/wizardSolutions/wizardSolutions.html",restrict:"EA",link:function(a,b,c){}}}),angular.module("duerrDiagnoseApp").factory("dataFactory",["Restangular","$q",function(a,b){return appConfig.useDummyData||a.setBaseUrl(appConfig.serverUrl),{getMessages:function(){return a.one("api/messages").get().then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read messages!"),c.promise})},getMessagesByPlant:function(c){return a.one("api/messages",c).one("plants").get().then(function(a){var d=b.defer();return a?d.resolve(a):d.reject("Could not read messages of plant "+c+"!"),d.promise})},getPlantById:function(c){return a.one("api/plants",c).get().then(function(a){var d=b.defer();return a?d.resolve(a):d.reject("Could not read id of plant "+c+"!"),d.promise})},getPlants:function(){return a.all("api/plants").getList().then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read plants!"),c.promise})},getErrorsByPlant:function(c){return a.one("api/plants",c).getList("errors").then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read errors!"),c.promise})},getErrorById:function(c){return a.one("api/errors",c).get().then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read error!"),c.promise})},getMainCausesFromErrors:function(c){return a.one("api/errors",c).one("maincauses").get().then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read main causes!"),c.promise})},toggleFunctionGroupHandling:function(c){return a.one("api/errors",c).post("handling",{}).then(function(a){var c=b.defer();return a?c.resolve(a):c.reject("Could not read main causes!"),c.promise})}}}]),angular.module("duerrDiagnoseApp").filter("messageFilter",function(){return function(a,b,c,d){if(b||c||d){var e=[];return a.forEach(function(a){b&&0===a.productionRelevance?e.push(a):c&&1===a.productionRelevance?e.push(a):d&&2===a.productionRelevance&&e.push(a)}),e}return!1}}),angular.module("duerrDiagnoseApp").filter("minutesToHHmm",function(){return function(a){a=Math.abs(a);var b=Math.floor(a/60),a=Math.floor(a%60);a=5*Math.round(a/5),10>b&&(b="0"+b),10>a&&(a="0"+a);var c=b+":"+a;return c}}),angular.module("duerrDiagnoseApp").filter("slice",function(){return function(a,b,c){return a.slice(b,c)}}),angular.module("duerrDiagnoseApp").run(["$templateCache",function(a){a.put("app/main/main.html","<contentsection></contentsection>"),a.put("app/plant/plant.html","<contentsection-plant></contentsection-plant>"),a.put("directives/contentsection/contentsection.html",'<div class=content-section><div class=content-bar></div><div class="grid standard"><gridelement dir-paginate="plant in plants | itemsPerPage:24" pagination-id=gridPlant></gridelement><dir-pagination-controls pagination-id=gridPlant template-url=directives/contentsectionPlant/paginationGrid.tpl.html></dir-pagination-controls></div><div class=whitespace></div></div>'),a.put("directives/contentsectionPlant/contentsectionPlant.html",'<div class=content-section><navigation-bar></navigation-bar><div class="grid plant standard" ng-init="rangeStart = 0; rangeEnd = 20;"><gridelement-plant dir-paginate="item in items | messageFilter:filter.error:filter.warning:filter.info | itemsPerPage:20" pagination-id=gridError></gridelement-plant><dir-pagination-controls pagination-id=gridError template-url=directives/contentsectionPlant/paginationGrid.tpl.html></dir-pagination-controls></div><wizard></wizard></div>'),a.put("directives/contentsectionPlant/paginationGrid.tpl.html",'<div class=pagination ng-show="pagination.last > 1"><button class=top ng-click="setCurrent(pagination.current - 1)" ng-class="{ \'inactive\': pagination.current < 2}"></button><div class=pages ng-show="range.lower != range.upper">{{ range.lower }}-{{ range.upper }} / {{ range.total }}</div><div class=pages ng-show="range.lower == range.upper">{{ range.total }} / {{ range.total }}</div><button class=down ng-click="setCurrent(pagination.current + 1)" ng-class="{ \'inactive\': pagination.last == pagination.current}"></button></div><div class=fake-grid ng-show="pagination.current < pagination.last"><div class=fake-grid-element ng-repeat="n in [1,2,3,4,5] track by $index"></div></div>'),a.put("directives/gridelement/gridelement.html",'<a class=grid-element ng-href=#/plant/{{plant.id}}-{{plant.name}}><div class=trapezoid-background></div><div class=title-container><p class=title>{{ plant.name }}</p></div><div class=status-wrapper ng-show="plant.errorCount > 0"><span class="status error"></span> <span class="count error">{{ plant.errorCount }}</span></div><div class=status-wrapper ng-show="plant.errorCount == 0 && plant.warningCount > 0"><span class="status warning"></span> <span class="count warning">{{ plant.warningCount }}</span></div><div class=status-wrapper ng-show="plant.errorCount == 0 && plant.warningCount == 0"><span class="status info"></span> <span class="count info">{{ plant.infoCount }}</span></div></a>'),a.put("directives/gridelementPlant/gridelementPlant.html",'<a ng-class="{ \'grid-element\': selectedTile.id != item.id && selectedTile.relatesTo.indexOf(item.id) == -1, \'grid-element active-related\': selectedTile.id != item.id && selectedTile.relatesTo.indexOf(item.id) != -1, \'grid-element active\': selectedTile.id == item.id }" ng-click=selectTile(item)><div class="big-icon {{ item.errorType }}"></div><div class=trapezoid-background></div><div class=title-container><p class=title>{{ item.functionGroup}}</p></div><div class=time><span class=left ng-show="item.timeHandling > 0">{{ item.timeHandling | amDifference : clock : \'minutes\' | minutesToHHmm}}</span> <span class=middle><span class=clock-icon></span></span> <span class=right><span class=icon-container ng-show="item.timeHandling == 0"></span> {{ item.timeStop | amDifference : clock : \'minutes\' | minutesToHHmm}}</span></div><div class=status-wrapper ng-show="item.timeHandling > 0"><span class=handling></span></div><div class=status-wrapper ng-show="item.productionRelevance == 0"><span class="status error"></span></div><div class=status-wrapper ng-show="item.productionRelevance == 1"><span class="status warning"></span></div><div class=status-wrapper ng-show="item.productionRelevance == 2"><span class="status info"></span></div></a>'),a.put("directives/mainmenu/mainmenu.html","<div id=main-menu><div class=background-image></div></div>"),a.put("directives/navigationBar/navigationBar.html",'<div class=navigation-bar><a ng-href="#/" class="breadcrumb general {{ overviewStatus }}">General Plant Overview</a><div class="breadcrumb plant {{ plant.status }}">{{ plant.name }}</div><div class=filter-dropdown>Filter Auswahl <span class=filter-icon></span></div><div class=button-wrapper><label for=button-error><div class="button filter error"><input type=checkbox ng-model=filter.error name="" id=button-error><label for=button-error><span></span></label><span class=icon></span> <span class=count>{{ plant.errorCount }}</span></div></label><label for=button-warning><div class="button filter warning"><input type=checkbox ng-model=filter.warning name="" id=button-warning><label for=button-warning><span></span></label><span class=icon></span> <span class=count>{{ plant.warningCount }}</span></div></label><label for=button-info><div class="button filter info"><input type=checkbox ng-model=filter.info name="" id=button-info><label for=button-info><span></span></label><span class=icon></span> <span class=count>{{ plant.infoCount }}</span></div></label><button class="button reset" ng-click=resetFilter() ng-disabled="filter.info && filter.warning && filter.error" ng-model=isDisabled><span class="icon refresh"></span></button></div></div>'),a.put("directives/statusbar/statusbar.html",'<div id=statusbar><div class=background-image></div><div class=current-time>{{ clock | date:\'dd.MM.yyyy - HH:mm\' }}</div><ul class=status-messages><li><div ng-show="messages.errorCount > 0"><span class="alert error"></span></div></li><li><div ng-show="messages.warningCount > 0"><span class="alert warning"></span></div></li><li><div ng-show="messages.infoCount > 0"><span class="alert info"></span></div></li></ul></div>'),a.put("directives/wizard/paginationWizard.tpl.html",'<div class=pagination ng-show="pagination.last > 1"><button class=top ng-click="setCurrent(pagination.current - 1)" ng-class="{ \'inactive\': pagination.current < 2}"></button><div class=pages ng-show="range.lower != range.upper">{{ range.lower }}-{{ range.upper }} / {{ range.total }}</div><div class=pages ng-show="range.lower == range.upper">{{ range.total }} / {{ range.total }}</div><button class=down ng-click="setCurrent(pagination.current + 1)" ng-class="{ \'inactive\': pagination.last == pagination.current}"></button></div>'),a.put("directives/wizard/wizard.html",'<div class="wizard wizards-container standard" ng-click=closeRelatedOverlay()><header><button class="button related" ng-click=openRelatedGroups(selectedTile.id) ng-disabled="selectedTile.relatesTo.length == 0" ng-model=isDisabled><span class="icon related"></span> <span class=count>{{ selectedTile.relatesTo.length }}</span></button><h2 class="{{ selectedTile.productionRelevance }}">{{ selectedTile.functionGroup }}</h2><div class="button favorites"><span class="icon favorites"></span></div></header><div class=tabbar><div class="status-icon {{ selectedTile.productionRelevance }}"></div></div><div class=content><div class=top-line><span>Symptom &amp; Hauptursachen</span><div class="button linkout" style=display:none><span class=linkout-icon></span></div></div><p class=red>{{ selectedTile.name }}</p><div class="button start-button" ng-click=toggleHandling(selectedTile.id)><div class=center><span class="icon handling"></span> <span ng-show=!selectedTile.inProcess>Start</span> <span ng-show=selectedTile.inProcess>Stop</span></div><span class=time>{{ selectedTile.timeStop | amDifference : clock : \'minutes\' | minutesToHHmm}}</span></div><ol><li class=errorItem dir-paginate="item in wizardData | itemsPerPage:3" pagination-id=wizard><span>{{ item.name }}</span> <button class="button info" ng-click=openSolutions(item) ng-disabled=areInfoButtonsDisabled ng-model=areInfoButtonsDisabled ng-class="{active : isSelected(item)}"><span class="icon info"></span></button><div class=connection-element ng-class="{active : isSelected(item)}"><span class="icon info"></span></div></li></ol><div class=pagination-conatiner><dir-pagination-controls pagination-id=wizard template-url=directives/wizard/paginationWizard.tpl.html></dir-pagination-controls></div></div></div><div class=overlay ng-click=closeAllOverlays()></div><wizard-solutions></wizard-solutions><wizard-related></wizard-related>'),a.put("directives/wizardRelated/paginationDetail.tpl.html",'<div class=pagination ng-show="pagination.last > 1"><button class=top ng-click="setCurrent(pagination.current - 1)" ng-class="{ \'inactive\': pagination.current < 2}"></button><div class=pages>{{ pagination.current }} / {{ pagination.last }}</div><button class=down ng-click="setCurrent(pagination.current + 1)" ng-class="{ \'inactive\': pagination.last == pagination.current}"></button></div>'),a.put("directives/wizardRelated/wizardRelated.html",'<div class=related-container style="display: none" ng-show=showOverview ng-class="{ fixwidth : relatedErrors.length > 3 }"><div class=inner-container><div class=wizards-container dir-paginate="item in relatedErrors | itemsPerPage:3" pagination-id=wizardrelated><header><button class="button related" ng-model=isDisabled><span class="icon related"></span> <span class=related-items>{{ item.relatesTo.length }}</span></button><h2 class="{{ item.productionRelevance }}">{{ item.functionGroup }}</h2><div class="button favorites"><span class="icon favorites"></span></div></header><div class=tabbar><div class="status-icon {{ item.productionRelevance }}"></div></div><div class="content standard"><div class=top-line><span>Symptom &amp; Hauptursachen</span><div class="button linkout" style=display:none><span class="icon linkout"></span></div></div><p class=red>{{ item.name }}</p><div class="button start-button" ng-click=toggleHandling(item.id)><div class=center><span class="icon handling"></span> <span>Start</span></div><span class=time>{{ item.timeStop | amDifference : clock : \'minutes\' | minutesToHHmm}}</span></div><ol><li dir-paginate="mainCause in relatedMainCauses[$index] | itemsPerPage:3" pagination-id="\'wizardRelatedItem_\' + $index"><span>{{ mainCause.name }}</span> <button class="button info" disabled><span class="icon info"></span></button></li></ol><div class=pagination-container><dir-pagination-controls pagination-id="\'wizardRelatedItem_\' + $index" template-url=directives/wizard/paginationWizard.tpl.html></dir-pagination-controls></div></div></div></div><button class="button close" ng-click=closeRelatedOverlay()><span class="icon close"></span></button><div class="pagination-container related"><dir-pagination-controls pagination-id=wizardrelated template-url=directives/wizardRelated/paginationDetail.tpl.html></dir-pagination-controls></div><div class=connection-element><span class="icon related"></span> <span class=count>{{ selectedTile.relatesTo.length }}</span></div></div>'),a.put("directives/wizardSolutions/wizardSolutions.html",'<div class=solutions-container style="display: none"><div class=top-container><h3>Lösung: {{ item.id }}</h3><ol><li ng-repeat="solution in openSolution.solution">{{ solution }}</li></ol><button class="button close" ng-click=closeSolutionOverlay()><span class="icon close"></span></button></div><div class=img-container><figure><figcaption>Maschine</figcaption><img src=../assets/images/data/pic_maschine.png></figure><figure><figcaption>Pumpe 11</figcaption><img src=../assets/images/data/pic_qrcode.png></figure></div><div class=comments-container><span class=headline>Systemnachrichten und Kommentar Einträge</span><div class=comments></div><div class=input-container><input name=comment placeholder="Kommentar eintragen" disabled> <button class="button plus" disabled><span class="icon plus"></span></button></div></div></div>')}]);